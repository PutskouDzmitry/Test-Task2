syntax = "proto3";

option go_package = "/proto";

import "google/api/annotations.proto";

package user;

message User {
  string id = 1;
  string email = 2;
  string username = 3;
  string password = 4;
  bool admin = 5;
}

message RegisterRequest {
  string email = 1;
  string username = 2;
  string password = 3;
}

message RegisterResponse {
  string user_id = 1;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
}

service Auth {
  rpc Register (RegisterRequest) returns (RegisterResponse){
    option(google.api.http) = {
      post: "/api/v1/auth/register"
      body: "*"
    };
  };
  rpc Login (LoginRequest) returns (LoginResponse){
    option(google.api.http) = {
      post: "/api/v1/auth/login"
      body: "*"
    };
  };
}

service UserService {
  rpc GetUsers(ReadAllUsersRequest) returns (ReadAllUsersResponse){
    option(google.api.http) = {
      get: "/api/v1/user/{count}"
    };
  }
  rpc GetUserById(GetUserByIdRequest) returns (GetUserResponse){
    option(google.api.http) = {
      get: "/api/v1/user/id/{id}"
    };
  }
  rpc GetUserByUsername(GetUserByUsernameRequest) returns (GetUserResponse){
    option(google.api.http) = {
      get: "/api/v1/user/username/{username}"
    };
  }
  rpc NewUser(AddUserRequest) returns (AddUserResponse){
    option(google.api.http) = {
      post: "/api/v1/user"
      body: "*"
    };
  }
  rpc Update(UpdateUserRequest) returns (UpdateUserResponse){
    option(google.api.http) = {
      post: "/api/v1/user/update"
      body: "*"
    };
  }
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse){
    option(google.api.http) = {
      post: "/api/v1/user/delete"
      body: "*"
    };
  }
}

message ReadAllUsersRequest {
  int32 count = 1;
}

message ReadAllUsersResponse {
  repeated User user = 1;
}

message GetUserByIdRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message GetUserByUsernameRequest {
  string username = 1;
}

message AddUserRequest {
  string token = 1;
  User user = 2;
}

message AddUserResponse {
  string id = 1;
}

message UpdateUserRequest {
  string token = 1;
  User user = 2;
}

message UpdateUserResponse {
}

message DeleteUserRequest {
  string token = 1;
}

message DeleteUserResponse {
}
